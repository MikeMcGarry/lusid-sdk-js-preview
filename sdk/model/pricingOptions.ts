/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1387
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ModelSelection } from './modelSelection';

/**
* Options for controlling the default aspects and behaviour of the pricing engine.
*/
export class PricingOptions {
    'modelSelection'?: ModelSelection;
    /**
    * If true then use the instrument type to set the default instrument pricer  This applies where no more specific set of overrides are provided on a per-vendor and instrument basis.
    */
    'useInstrumentTypeToDeterminePricer'?: boolean;
    /**
    * By default, one would not expect to price and exotic instrument, i.e. an instrument with a complicated  instrument definition simply through looking up a price as there should be a better way of evaluating it.  To override that behaviour and allow lookup for a price from the instrument identifier(s), set this to true.
    */
    'allowAnyInstrumentsWithSecUidToPriceOffLookup'?: boolean;
    /**
    * If true then a failure in task evaluation doesn\'t cause overall failure.  results will be returned where they succeeded and annotation elsewhere
    */
    'allowPartiallySuccessfulEvaluation'?: boolean;
    /**
    * If true (default), when pricing an Fx-Forward or Interest Rate Swap, Future and other linearly separable products, product two results, one for each leg  rather than a single line result with the amalgamated/summed pv from both legs.
    */
    'produceSeparateResultForLinearOtcLegs'?: boolean;
    /**
    * If true, when pricing using a model or for an instrument that supports use of intermediate cached-results, use them.  Default is that this caching is turned off.
    */
    'enableUseOfCachedUnitResults'?: boolean;
    /**
    * If true, when valuing an instrument outside the period where it is \'alive\' (the start-maturity window) it will return a valuation of zero
    */
    'windowValuationOnInstrumentStartEnd'?: boolean;
    /**
    * When creating a payment diary, should contingent cash payments (e.g. from exercise of a swaption into a swap) be included or not.  i.e. Is exercise or default being assumed to happen or not.
    */
    'removeContingentCashflowsInPaymentDiary'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "modelSelection",
            "baseName": "modelSelection",
            "type": "ModelSelection"
        },
        {
            "name": "useInstrumentTypeToDeterminePricer",
            "baseName": "useInstrumentTypeToDeterminePricer",
            "type": "boolean"
        },
        {
            "name": "allowAnyInstrumentsWithSecUidToPriceOffLookup",
            "baseName": "allowAnyInstrumentsWithSecUidToPriceOffLookup",
            "type": "boolean"
        },
        {
            "name": "allowPartiallySuccessfulEvaluation",
            "baseName": "allowPartiallySuccessfulEvaluation",
            "type": "boolean"
        },
        {
            "name": "produceSeparateResultForLinearOtcLegs",
            "baseName": "produceSeparateResultForLinearOtcLegs",
            "type": "boolean"
        },
        {
            "name": "enableUseOfCachedUnitResults",
            "baseName": "enableUseOfCachedUnitResults",
            "type": "boolean"
        },
        {
            "name": "windowValuationOnInstrumentStartEnd",
            "baseName": "windowValuationOnInstrumentStartEnd",
            "type": "boolean"
        },
        {
            "name": "removeContingentCashflowsInPaymentDiary",
            "baseName": "removeContingentCashflowsInPaymentDiary",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return PricingOptions.attributeTypeMap;
    }
}

