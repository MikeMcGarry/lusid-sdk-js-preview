/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1389
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BondInstrumentAllOf } from './bondInstrumentAllOf';
import { FlowConventions } from './flowConventions';
import { LusidInstrument } from './lusidInstrument';

/**
* IL Bond Instrument; Lusid-ibor internal representation of a Bond instrument
*/
export class BondInstrument extends LusidInstrument {
    'startDate': Date;
    'maturityDate': Date;
    'domCcy': string;
    /**
    * simple coupon rate.
    */
    'couponRate': number;
    /**
    * The face-value or principal for the bond at outset.              This might be reduced through its lifetime in the event of amortization or similar.
    */
    'principal': number;
    'flowConventions': FlowConventions;
    /**
    * Instrument type, must be property for JSON.
    */
    'instrumentType': BondInstrument.InstrumentTypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "startDate",
            "baseName": "startDate",
            "type": "Date"
        },
        {
            "name": "maturityDate",
            "baseName": "maturityDate",
            "type": "Date"
        },
        {
            "name": "domCcy",
            "baseName": "domCcy",
            "type": "string"
        },
        {
            "name": "couponRate",
            "baseName": "couponRate",
            "type": "number"
        },
        {
            "name": "principal",
            "baseName": "principal",
            "type": "number"
        },
        {
            "name": "flowConventions",
            "baseName": "flowConventions",
            "type": "FlowConventions"
        },
        {
            "name": "instrumentType",
            "baseName": "instrumentType",
            "type": "BondInstrument.InstrumentTypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(BondInstrument.attributeTypeMap);
    }
}

export namespace BondInstrument {
    export enum InstrumentTypeEnum {
        QuotedSecurity = <any> 'QuotedSecurity',
        InterestRateSwap = <any> 'InterestRateSwap',
        FxForward = <any> 'FxForward',
        Exotic = <any> 'Exotic',
        FxOption = <any> 'FxOption',
        CreditDefaultSwap = <any> 'CreditDefaultSwap',
        InterestRateSwaption = <any> 'InterestRateSwaption',
        Bond = <any> 'Bond',
        EquityOption = <any> 'EquityOption',
        Unknown = <any> 'Unknown'
    }
}
