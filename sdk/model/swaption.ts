/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1387
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LusidInstrument } from './lusidInstrument';
import { SwaptionAllOf } from './swaptionAllOf';

/**
* A swaption, an option to enter into an interest rate swap.
*/
export class Swaption extends LusidInstrument {
    'startDate': Date;
    /**
    * True if on exercise the holder of the option enters the swap paying fixed, false if floating.
    */
    'isPayerNotReceiver': boolean;
    /**
    * True of the option is settled in cash false if by delivery of the swap.
    */
    'isDeliveryNotCash': boolean;
    'swap': LusidInstrument;
    /**
    * Instrument type, must be property for JSON.
    */
    'instrumentType': Swaption.InstrumentTypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "startDate",
            "baseName": "startDate",
            "type": "Date"
        },
        {
            "name": "isPayerNotReceiver",
            "baseName": "isPayerNotReceiver",
            "type": "boolean"
        },
        {
            "name": "isDeliveryNotCash",
            "baseName": "isDeliveryNotCash",
            "type": "boolean"
        },
        {
            "name": "swap",
            "baseName": "swap",
            "type": "LusidInstrument"
        },
        {
            "name": "instrumentType",
            "baseName": "instrumentType",
            "type": "Swaption.InstrumentTypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(Swaption.attributeTypeMap);
    }
}

export namespace Swaption {
    export enum InstrumentTypeEnum {
        QuotedSecurity = <any> 'QuotedSecurity',
        InterestRateSwap = <any> 'InterestRateSwap',
        FxForward = <any> 'FxForward',
        Exotic = <any> 'Exotic',
        FxOption = <any> 'FxOption',
        CreditDefaultSwap = <any> 'CreditDefaultSwap',
        InterestRateSwaption = <any> 'InterestRateSwaption',
        Bond = <any> 'Bond',
        EquityOption = <any> 'EquityOption',
        Unknown = <any> 'Unknown'
    }
}
