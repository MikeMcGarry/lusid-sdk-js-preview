/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1387
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* The combination of a library to use and a model in that library that defines which pricing code will evaluate instruments  having a particular type/class. This allows us to control the model type and library for a given instrument.
*/
export class ModelSelection {
    /**
    * Which library is used for pricing requests
    */
    'library': ModelSelection.LibraryEnum;
    /**
    * Which model should be used for pricing requests
    */
    'model': ModelSelection.ModelEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "library",
            "baseName": "library",
            "type": "ModelSelection.LibraryEnum"
        },
        {
            "name": "model",
            "baseName": "model",
            "type": "ModelSelection.ModelEnum"
        }    ];

    static getAttributeTypeMap() {
        return ModelSelection.attributeTypeMap;
    }
}

export namespace ModelSelection {
    export enum LibraryEnum {
        Lusid = <any> 'Lusid',
        RefinitivQps = <any> 'RefinitivQps',
        RefinitivTracsWeb = <any> 'RefinitivTracsWeb',
        VolMaster = <any> 'VolMaster',
        IsdaCds = <any> 'IsdaCds'
    }
    export enum ModelEnum {
        SimpleStatic = <any> 'SimpleStatic',
        Discounting = <any> 'Discounting',
        VendorDefault = <any> 'VendorDefault',
        BlackScholes = <any> 'BlackScholes'
    }
}
