/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1386
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { InstrumentLeg } from './instrumentLeg';

export class SwapInstrumentAllOf {
    /**
    * Starting date of the swap
    */
    'startDate': Date;
    /**
    * Maturity date of the swap
    */
    'maturityDate': Date;
    /**
    * True if the swap is amortizing
    */
    'legs': Array<InstrumentLeg>;
    /**
    * The notional.
    */
    'notional': number;
    /**
    * True if the swap is amortizing
    */
    'isAmortizing': boolean;
    /**
    * True notional exchange type.
    */
    'notionalExchangeType': SwapInstrumentAllOf.NotionalExchangeTypeEnum;
    /**
    * Instrument type, must be property for JSON.
    */
    'instrumentType': SwapInstrumentAllOf.InstrumentTypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "startDate",
            "baseName": "startDate",
            "type": "Date"
        },
        {
            "name": "maturityDate",
            "baseName": "maturityDate",
            "type": "Date"
        },
        {
            "name": "legs",
            "baseName": "legs",
            "type": "Array<InstrumentLeg>"
        },
        {
            "name": "notional",
            "baseName": "notional",
            "type": "number"
        },
        {
            "name": "isAmortizing",
            "baseName": "isAmortizing",
            "type": "boolean"
        },
        {
            "name": "notionalExchangeType",
            "baseName": "notionalExchangeType",
            "type": "SwapInstrumentAllOf.NotionalExchangeTypeEnum"
        },
        {
            "name": "instrumentType",
            "baseName": "instrumentType",
            "type": "SwapInstrumentAllOf.InstrumentTypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return SwapInstrumentAllOf.attributeTypeMap;
    }
}

export namespace SwapInstrumentAllOf {
    export enum NotionalExchangeTypeEnum {
        None = <any> 'None',
        Initial = <any> 'Initial',
        Final = <any> 'Final',
        Both = <any> 'Both'
    }
    export enum InstrumentTypeEnum {
        QuotedSecurity = <any> 'QuotedSecurity',
        InterestRateSwap = <any> 'InterestRateSwap',
        FxForward = <any> 'FxForward',
        Exotic = <any> 'Exotic',
        FxOption = <any> 'FxOption',
        CreditDefaultSwap = <any> 'CreditDefaultSwap',
        InterestRateSwaption = <any> 'InterestRateSwaption',
        Bond = <any> 'Bond',
        EquityOption = <any> 'EquityOption',
        Unknown = <any> 'Unknown'
    }
}
