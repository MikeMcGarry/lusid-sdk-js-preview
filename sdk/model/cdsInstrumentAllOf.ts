/**
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1383
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CdsDetailSpecification } from './cdsDetailSpecification';
import { FlowConventions } from './flowConventions';

export class CdsInstrumentAllOf {
    /**
    * A ticker to uniquely specify then entity against which the cds is written
    */
    'ticker': string;
    /**
    * Flow Convention details for the legs of the CDS (in practice the conventions for the protection leg are limited/based on premium leg)
    */
    'flowConventions': Array<FlowConventions>;
    /**
    * The coupon rate paid on each payment date of the premium leg as a fraction of 100 percent, e.g. \"0.05\" meaning 500 basis points or 5%.  For a standard corporate CDS (North American) this must be either 100bps or 500bps.
    */
    'couponRate': number;
    'detailSpecification': CdsDetailSpecification;
    /**
    * Starting date of the credit default swap
    */
    'startDate': Date;
    /**
    * Maturity date of the credit default swap
    */
    'maturityDate': Date;
    /**
    * Domestic currency of the credit default swap
    */
    'domCcy': string;
    /**
    * Instrument type, must be property for JSON.
    */
    'instrumentType': CdsInstrumentAllOf.InstrumentTypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "ticker",
            "baseName": "ticker",
            "type": "string"
        },
        {
            "name": "flowConventions",
            "baseName": "flowConventions",
            "type": "Array<FlowConventions>"
        },
        {
            "name": "couponRate",
            "baseName": "couponRate",
            "type": "number"
        },
        {
            "name": "detailSpecification",
            "baseName": "detailSpecification",
            "type": "CdsDetailSpecification"
        },
        {
            "name": "startDate",
            "baseName": "startDate",
            "type": "Date"
        },
        {
            "name": "maturityDate",
            "baseName": "maturityDate",
            "type": "Date"
        },
        {
            "name": "domCcy",
            "baseName": "domCcy",
            "type": "string"
        },
        {
            "name": "instrumentType",
            "baseName": "instrumentType",
            "type": "CdsInstrumentAllOf.InstrumentTypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return CdsInstrumentAllOf.attributeTypeMap;
    }
}

export namespace CdsInstrumentAllOf {
    export enum InstrumentTypeEnum {
        QuotedSecurity = <any> 'QuotedSecurity',
        InterestRateSwap = <any> 'InterestRateSwap',
        FxForward = <any> 'FxForward',
        Exotic = <any> 'Exotic',
        FxOption = <any> 'FxOption',
        CreditDefaultSwap = <any> 'CreditDefaultSwap',
        InterestRateSwaption = <any> 'InterestRateSwaption',
        Bond = <any> 'Bond',
        EquityOption = <any> 'EquityOption',
        Unknown = <any> 'Unknown'
    }
}
